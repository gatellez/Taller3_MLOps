
services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 10
    ports:
      - "${POSTGRES_PORT}:5432"

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    ports:
      - "${REDIS_PORT}:6379"

  penguins-db:
    image: mariadb:11
    environment:
      MARIADB_DATABASE: ${DATA_DB_NAME}
      MARIADB_USER: ${DATA_DB_USER}
      MARIADB_PASSWORD: ${DATA_DB_PASSWORD}
      MARIADB_ROOT_PASSWORD: root
    ports:
      - "${MARIA_DB_PORT}:3306"
    healthcheck:
      test: ["CMD-SHELL", "mariadb -u${DATA_DB_USER} -p${DATA_DB_PASSWORD} -e 'SELECT 1' ${DATA_DB_NAME} || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 15

  airflow-init:
    build:
      context: ./airflow
    user: "${AIRFLOW_UID}:${AIRFLOW_GID}"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      AIRFLOW__WEBSERVER__SECRET_KEY: secretsecretsecret
      AIRFLOW__API__AUTH_BACKENDS: "airflow.api.auth.backend.session,airflow.api.auth.backend.basic_auth"
      _PIP_ADDITIONAL_REQUIREMENTS: ""
      DATA_DB_HOST: penguins-db
      DATA_DB_PORT: 3306
      DATA_DB_USER: ${DATA_DB_USER}
      DATA_DB_PASSWORD: ${DATA_DB_PASSWORD}
      DATA_DB_NAME: ${DATA_DB_NAME}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./models:/opt/airflow/models
    command: >
      bash -lc "
      airflow db migrate &&
      airflow users create --username admin --firstname Admin --lastname User --role Admin --email admin@example.com --password admin &&
      airflow connections create-default-connections || true
      "

  airflow-webserver:
    build:
      context: ./airflow
    user: "${AIRFLOW_UID}:${AIRFLOW_GID}"
    depends_on:
      airflow-init:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      AIRFLOW__WEBSERVER__SECRET_KEY: secretsecretsecret
      AIRFLOW__API__AUTH_BACKENDS: "airflow.api.auth.backend.session,airflow.api.auth.backend.basic_auth"
      DATA_DB_HOST: penguins-db
      DATA_DB_PORT: 3306
      DATA_DB_USER: ${DATA_DB_USER}
      DATA_DB_PASSWORD: ${DATA_DB_PASSWORD}
      DATA_DB_NAME: ${DATA_DB_NAME}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./models:/opt/airflow/models
    ports:
      - "${AIRFLOW_WEB_PORT}:8080"
    command: ["bash","-lc","airflow webserver"]
    restart: unless-stopped

  airflow-scheduler:
    build:
      context: ./airflow
    user: "${AIRFLOW_UID}:${AIRFLOW_GID}"
    depends_on:
      airflow-webserver:
        condition: service_started
      redis:
        condition: service_started
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      AIRFLOW__API__AUTH_BACKENDS: "airflow.api.auth.backend.session,airflow.api.auth.backend.basic_auth"
      DATA_DB_HOST: penguins-db
      DATA_DB_PORT: 3306
      DATA_DB_USER: ${DATA_DB_USER}
      DATA_DB_PASSWORD: ${DATA_DB_PASSWORD}
      DATA_DB_NAME: ${DATA_DB_NAME}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./models:/opt/airflow/models
    command: ["bash","-lc","airflow scheduler"]
    restart: unless-stopped

  airflow-worker:
    build:
      context: ./airflow
    user: "${AIRFLOW_UID}:${AIRFLOW_GID}"
    depends_on:
      airflow-webserver:
        condition: service_started
      redis:
        condition: service_started
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      AIRFLOW__API__AUTH_BACKENDS: "airflow.api.auth.backend.session,airflow.api.auth.backend.basic_auth"
      DATA_DB_HOST: penguins-db
      DATA_DB_PORT: 3306
      DATA_DB_USER: ${DATA_DB_USER}
      DATA_DB_PASSWORD: ${DATA_DB_PASSWORD}
      DATA_DB_NAME: ${DATA_DB_NAME}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./models:/opt/airflow/models
    command: ["bash","-lc","airflow celery worker"]
    restart: unless-stopped

  flower:
    build:
      context: ./airflow
    user: "${AIRFLOW_UID}:${AIRFLOW_GID}"
    depends_on:
      airflow-webserver:
        condition: service_started
      redis:
        condition: service_started
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      AIRFLOW__API__AUTH_BACKENDS: "airflow.api.auth.backend.session,airflow.api.auth.backend.basic_auth"
    ports:
      - "${FLOWER_PORT}:5555"
    command: ["bash","-lc","airflow celery flower"]
    restart: unless-stopped

  api:
    build:
      context: ./api
    environment:
      MODEL_PATH: /models/model.pkl
    volumes:
      - ./models:/models
    ports:
      - "${API_PORT}:8000"
    restart: unless-stopped
